% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/mappy.R, R/package.mappy.R
\docType{package}
\name{mappy}
\alias{mappy}
\alias{mappy-package}
\alias{unmappy}
\title{Assign an alias to an R expression in the interactive console.}
\usage{
mappy(..., envir = globalenv(), register = identical(envir, globalenv()))

unmappy(expression_names, envir = globalenv(), deregister = identical(envir,
  globalenv()))
}
\arguments{
\item{...}{The named arguments will be translated to the aliases. See the
accompanying examples.}

\item{envir}{environment. The environment to bind the aliases in using
\code{\link{makeActiveBinding}}. By default, the global environment.}

\item{register}{logical. Whether or not to register the shortcut
in the registry. By default, \code{TRUE} if \code{envir} is the global
environment, and \code{FALSE} otherwise.}

\item{expression_names}{character. The expressions to unmap.}

\item{deregister}{logical. Whether or not to deregister the shortcut
in the registry. By default, \code{TRUE} if \code{envir} is the global
environment, and \code{FALSE} otherwise.}
}
\value{
the names of the bound shortcuts.
}
\description{
Assign an alias to an R expression in the interactive console.

This package provides the ability to create shortcuts for use in the
interactive R console to prevent yourself from writing commonly used
expressions multiple times.
}
\details{
For example, if you frequently find yourself typing
   \code{some_annoyingly$long_expression},
you can bind it to \code{S} by writing
   \code{mappy(S = some_annoyingly$long_expression)}.
Now, typing \code{S} in your interactive R console executes the expression
in full each time. Note that mappy relies on the ~/.R/mappy file to make
this work between sessions. If you wish to use a different file, set
\code{options(mappy.file = "/your/dir/file")}.

Mappy shortcuts do not apply outside of interactive R sessions (see
\code{\link[base]{interactive}}.
}
\examples{
\dontrun{
  mappy(hi = cat("Hello world"))
  hi # Now, writing "hi" executes cat("Hello world")
  stopifnot(bindingIsActive("hi", globalenv()))
  unmappy("hi") # Now the shortcut is gone.
}

env <- new.env()
mappy(m = lm(Sepal.Width ~ Sepal.Length, data = iris)$model, envir = env)
# Now, env$m will refer to the lm model object. Note that since the
# expression will be re-computed each time, so will the model!
model <- env$m
}

